# Travis (https://travis-ci.org) configuration file

sudo: required
services:
  - docker
matrix:
    include:
        - os: linux
          python: 2.7
          sudo: required

        - os: linux
          python: 3.4
          sudo: required

        - os: osx
          env: TRAVIS_PYTHON_VERSION=2.7
          language: generic

before_install:
  - if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
      brew update > /dev/null;
      brew install python;
      brew install homebrew/science/root;
      virtualenv venv -p python$TRAVIS_PYTHON_VERSION;
      source venv/bin/activate;
      source $(brew --prefix root)/libexec/thisroot.sh;
      pip install pip -U;
      pip install -r requirements.txt;
      pip install rootpy root_numpy;
      mkdir -p $HOME/.matplotlib;
      echo 'backend:TkAgg' > $HOME/.matplotlib/matplotlibrc;
    else
      source ci/install_repbase.sh;
      conda list;
    fi
  # printing DEBUG information
  - which python
  - echo $LD_LIBRARY_PATH
install:
  - pip install .
script:
  # listing everything in howto folder recursively
  - ls -alR ./howto/
  # setting flag: don't proceed if one of commands fails.
  - set -e
  - mkdir -p ./.cache/rep
  # testing all but notebooks
  - if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
      nosetests -v --detailed-errors --nocapture ./tests/test_*;
    else
      THEANO_FLAGS='gcc.cxxflags="-march=core2"' nosetests -v --detailed-errors --nocapture ./tests/test_*;
    fi
  # testing only notebooks
  - if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
      nosetests -v --detailed-errors --nocapture --stop ./tests/z_test_*;
    else
      THEANO_FLAGS='gcc.cxxflags="-march=core2"' nosetests -v --detailed-errors --nocapture --stop ./tests/z_test_*;
    fi
  # if on master and tests passed successfully, trigger rebuilding of docker image.
  - if [[ "$TRAVIS_BRANCH" = "master" && "${TRAVIS_PYTHON_VERSION:0:1}" = "2" ]] ; then make push-latest ; fi
  # reseting flag
  - set +e
notifications:
  email: true
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/4eb609958a03b4bc1df5
    on_success: always  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: always    # options: [always|never|change] default: always
